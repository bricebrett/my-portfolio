{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///Users/bricebrettinger/Desktop/OPENCLASSROOMS/my-portfolio/frontend/src/app/api/contact/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport nodemailer from \"nodemailer\";\nimport { z } from \"zod\";\n\nconst ContactSchema = z.object({\n  name: z.string().min(1),\n  email: z.string().email(),\n  message: z.string().min(10),\n  // honeypot anti-bot optionnel:\n  website: z.string().optional().default(\"\"),\n});\n\nexport async function POST(req: Request) {\n  try {\n    const body = await req.json();\n    const parsed = ContactSchema.parse(body);\n\n    // Honeypot (si rempli => bot)\n    if (parsed.website && parsed.website.trim() !== \"\") {\n      return NextResponse.json({ ok: true }); // on \"rÃ©ussit\" silencieusement\n    }\n\n    const transporter = nodemailer.createTransport({\n      host: process.env.SMTP_HOST,\n      port: Number(process.env.SMTP_PORT || 587),\n      secure: Number(process.env.SMTP_PORT) === 465,\n      auth: {\n        user: process.env.SMTP_USER,\n        pass: process.env.SMTP_PASS,\n      },\n    });\n\n    const info = await transporter.sendMail({\n      from: process.env.CONTACT_FROM,\n      to: process.env.CONTACT_TO,\n      subject: `ðŸ“© Nouveau message de ${parsed.name}`,\n      replyTo: parsed.email,\n      text: parsed.message,\n      html: `\n        <h2>Nouveau message du portfolio</h2>\n        <p><strong>Nom:</strong> ${parsed.name}</p>\n        <p><strong>Email:</strong> ${parsed.email}</p>\n        <p><strong>Message:</strong></p>\n        <pre style=\"white-space:pre-wrap\">${parsed.message}</pre>\n      `,\n    });\n\n    return NextResponse.json({ ok: true, id: info.messageId });\n  } catch (err: any) {\n    const msg = err?.message ?? \"Failed to send\";\n    return NextResponse.json({ ok: false, error: msg }, { status: 400 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,gBAAgB,+KAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,MAAM,+KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACrB,OAAO,+KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;IACvB,SAAS,+KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACxB,+BAA+B;IAC/B,SAAS,+KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;AACzC;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,SAAS,cAAc,KAAK,CAAC;QAEnC,8BAA8B;QAC9B,IAAI,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,IAAI,OAAO,IAAI;YAClD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,IAAI;YAAK,IAAI,+BAA+B;QACzE;QAEA,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;YAC7C,MAAM,QAAQ,GAAG,CAAC,SAAS;YAC3B,MAAM,OAAO,QAAQ,GAAG,CAAC,SAAS,IAAI;YACtC,QAAQ,OAAO,QAAQ,GAAG,CAAC,SAAS,MAAM;YAC1C,MAAM;gBACJ,MAAM,QAAQ,GAAG,CAAC,SAAS;gBAC3B,MAAM,QAAQ,GAAG,CAAC,SAAS;YAC7B;QACF;QAEA,MAAM,OAAO,MAAM,YAAY,QAAQ,CAAC;YACtC,MAAM,QAAQ,GAAG,CAAC,YAAY;YAC9B,IAAI,QAAQ,GAAG,CAAC,UAAU;YAC1B,SAAS,CAAC,sBAAsB,EAAE,OAAO,IAAI,EAAE;YAC/C,SAAS,OAAO,KAAK;YACrB,MAAM,OAAO,OAAO;YACpB,MAAM,CAAC;;iCAEoB,EAAE,OAAO,IAAI,CAAC;mCACZ,EAAE,OAAO,KAAK,CAAC;;0CAER,EAAE,OAAO,OAAO,CAAC;MACrD,CAAC;QACH;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,IAAI;YAAM,IAAI,KAAK,SAAS;QAAC;IAC1D,EAAE,OAAO,KAAU;QACjB,MAAM,MAAM,KAAK,WAAW;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,IAAI;YAAO,OAAO;QAAI,GAAG;YAAE,QAAQ;QAAI;IACpE;AACF","debugId":null}}]
}